generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model accounts {
  id                String   @id @default(uuid()) @db.Uuid
  fullName          String   @map("full_name")
  email             String   @unique
  termsAccepted     Boolean  @default(false) @map("terms_accepted")
  termsAcceptedAt   DateTime? @map("terms_accepted_at") @db.Timestamptz(6)
  createdAt         DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt         DateTime @updatedAt @map("updated_at") @db.Timestamptz(6)

  subscriptions subscriptions[]
}

model subscriptions {
  id         String     @id @default(uuid()) @db.Uuid
  plan       String
  recurrence RECURRENCE
  status     STATUS
  startDate  DateTime   @map("start_date") @db.Timestamptz(6)
  tag        String?    @db.VarChar(100)
  customPrice Int?       @map("custom_price")
  canceledAt DateTime?  @map("canceled_at") @db.Timestamptz(6)
  createdAt  DateTime   @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt  DateTime   @updatedAt @map("updated_at") @db.Timestamptz(6)

  accountId String   @map("account_id") @db.Uuid
  account   accounts @relation(fields: [accountId], references: [id], onDelete: Cascade)

  platformsId String?    @db.Uuid
  platforms   platforms? @relation(fields: [platformsId], references: [id])
}

model platforms {
  id          String     @id @default(uuid()) @db.Uuid
  name        String
  category    CATEGORIES
  websiteUrl  String     @map("website_url")

  createdAt     DateTime                   @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt     DateTime                   @updatedAt @map("updated_at") @db.Timestamptz(6)
  canceledAt    DateTime?                  @map("canceled_at") @db.Timestamptz(6)
  subscriptions subscriptions[]
  historyPrice  platforms_history_prices[]
}

model platforms_history_prices {
  id String @id @default(uuid()) @db.Uuid

  monthlyPrice Int?     @map("monthly_price")
  yearlyPrice  Int?     @map("yearly_price")
  date         DateTime @map("date") @db.Timestamptz(6)

  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime @updatedAt @map("updated_at") @db.Timestamptz(6)

  platformId String    @map("platform_id") @db.Uuid
  platforms  platforms @relation(fields: [platformId], references: [id], onDelete: Cascade)
}

enum STATUS {
  ACTIVE
  WARNING
  CANCELED
}

enum RECURRENCE {
  MONTHLY
  YEARLY
}

enum CATEGORIES {
  SOCIAL
  STREAMING
  GAMING
  PRODUCTIVITY
  MUSIC
  NEWS
  FITNESS
  EDUCATION
  TRAVEL
  FOOD
  SHOPPING
  SECURITY
  INVESTMENT
  ENTERTAINMENT
  HEALTH
  ADULT
  OTHER
}
