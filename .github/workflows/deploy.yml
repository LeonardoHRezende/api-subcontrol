name: Deploy App

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: subcontrol-api
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
    
    steps:
      - name: Checkout do c√≥digo
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build e Push da imagem Docker
        run: |
          docker build -t $IMAGE_NAME .
          docker tag $IMAGE_NAME $DOCKERHUB_USERNAME/$IMAGE_NAME:latest
          docker push $DOCKERHUB_USERNAME/$IMAGE_NAME:latest

      - name: Deploy via SSH na EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd /home/ubuntu/api-subcontrol
            git pull origin main

            echo "üßπ Limpando imagens e containers antigos..."
            docker system prune -a -f --volumes

            echo "üìÅ Atualizando .env"
            cp .env.example .env
            sed -i "s|DATABASE_URL=.*|DATABASE_URL=${{ secrets.DATABASE_URL }}|" .env
            sed -i "s|NODE_ENV=.*|NODE_ENV=prod|" .env
            sed -i "s|PORT=.*|PORT=3333|" .env

            echo "üöÄ Subindo containers..."
            docker-compose -f docker-compose.prod.yml pull
            docker-compose -f docker-compose.prod.yml up -d --remove-orphans
